import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,d as t,e as m,a as p,f as h,o as n,r as c}from"./app-BlI6hWAJ.js";const o={},g=t("p",null,"摘要：2HighLight、Hatching、Halftone",-1),r=t("p",null,"上节课答案：",-1),l=t("div",{class:"image-preview"},[t("img",{src:"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127130812.png",style:{width:"90% !important"}})],-1),d=h('<div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127130955.png" style="width:90% !important;"></div><p> </p><h2 id="规范" tabindex="-1"><a class="header-anchor" href="#规范"><span>规范</span></a></h2><p>为美术团队规范，整理项目资源，是TA的职责之一；所以要从规范自身做起。</p><p>规范：</p><ul><li>路径规范</li><li>命名规范</li><li>递交形式规范</li></ul><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124000501.png" style="width:30% !important;"></div><p>shader路径设置 和 材质shader路径选择</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240123234846.png" style="width:40% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124000004.png" style="width:41.1% !important;"></div><p> </p><h2 id="shader" tabindex="-1"><a class="header-anchor" href="#shader"><span>Shader</span></a></h2><h3 id="偏移用加减-缩放用乘除" tabindex="-1"><a class="header-anchor" href="#偏移用加减-缩放用乘除"><span><i class="fa-solid fa-star"></i>偏移用加减-缩放用乘除</span></a></h3><p>在开始之前，得提起一个口诀：<strong>偏移用加减-缩放用乘除</strong>，接下来会用到加减乘除较多。</p><h3 id="_2highlight" tabindex="-1"><a class="header-anchor" href="#_2highlight"><span>2HighLight</span></a></h3><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124010149.png" style="width:15% !important;"></div><p>两个高光实现的方法-是通过对法线的偏移实现的。然后通过if把值给限定，得到高光mask。</p><h4 id="ramptex-lambert" tabindex="-1"><a class="header-anchor" href="#ramptex-lambert"><span>RampTex + lambert</span></a></h4><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124011715.png" style="width:90% !important;"></div><h4 id="offce-ndir" tabindex="-1"><a class="header-anchor" href="#offce-ndir"><span>Offce + nDir</span></a></h4><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124010801.png" style="width:90% !important;"></div><h4 id="lerp-fresnel" tabindex="-1"><a class="header-anchor" href="#lerp-fresnel"><span>Lerp + fresnel</span></a></h4><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124011807.png" style="width:90% !important;"></div><p>然后通过开放参数在材质球上调整偏移+颜色等即可实现。</p><p> </p><h3 id="hatching" tabindex="-1"><a class="header-anchor" href="#hatching"><span>Hatching</span></a></h3><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240126013626.png" style="width:15% !important;"></div><p>主要节点：</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240124223148.png" style="width:90% !important;"></div><p>实现方法</p><ul><li>绘制一张贴图，通过对屏幕空间正面叠底</li></ul><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240126005607.png" style="width:90% !important;"></div><ul><li>然后通过step节点, 取绝对值，得到阴影线，然后再使用lrep节点叠加颜色。最后则是add 相加一下lambert明暗信息-增加体积感。</li></ul><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240126012208.png" style="width:90% !important;"></div><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240126012437.png" style="width:90% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240126013116.png" style="width:90% !important;"></div><blockquote><p>tips：可以同过使用<code>slide</code>节点对<code>line width</code>（描边宽度）进行控制-这样材质面板中就会暴露出一个滑块，比填数值好用。</p></blockquote><p> </p><h3 id="halftone" tabindex="-1"><a class="header-anchor" href="#halftone"><span>Halftone</span></a></h3><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127001112.png" style="width:15% !important;"></div><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127003825.png" style="width:60% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127005611.png" style="width:40% !important;"></div><p>首先-我们需要知道，屏幕空间坐标U和V方向的是这样的。然后我们通过对屏幕空间UV的相乘，大于0的值不断被叠加，那么白色的区域占比会越来越多。</p><p>然后我们再对这个屏幕空间这个值，取小数。 就会得到这么一个循环，然后U和V通道合并就等于得到了一个tiling的UV坐标。</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127003239.png" style="width:80% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127005906.png" style="width:20% !important;"></div><p>接下来对它进行一个从映射-也就对当前的局部uv坐标进行偏移（如下说明一样），然后在进行取0-1的长度，就能得到一个点阵一样的程序纹理了。</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127010433.png" style="width:100% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127010903.png" style="width:80% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127013613.png" style="width:20% !important;"></div><p>然后创建明暗信息（lambert），然后对明暗进行重映射</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127011632.png" style="width:90% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127011931.png" style="width:10% !important;"></div><p>然后在使用power，对小数不断相乘-会越来越小-也就是说会越来越黑。 例如：0.1*0.1=0.01<br> 最后使用Round （四舍五入）取整数，黑的越黑白的越白。</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127012248.png" style="width:90% !important;"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127012954.png" style="width:90% !important;"></div><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127001010.png" style="width:90% !important;"></div>',49);function u(y,v){const e=c("Badge");return n(),s("div",null,[g,a(" more "),r,l,t("blockquote",null,[t("p",null,[m("Tips： mip map 指的是根据屏幕距离生成的等比缩小的原图-类似LOD "),p(e,{type:"tip",text:"mip map"})])]),d])}const q=i(o,[["render",u],["__file","shader2.html.vue"]]),_=JSON.parse('{"path":"/engine/unity/shader/shader2.html","title":"unity-shader-02","lang":"zh-CN","frontmatter":{"title":"unity-shader-02","description":"摘要：2HighLight、Hatching、Halftone","icon":"iconfont alicon-shader","category":"shader","tag":["shader","unity"],"date":"2024-01-23T00:00:00.000Z","cover":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127014454.png","head":[["meta",{"property":"og:url","content":"https:///about.md/blog/engine/unity/shader/shader2.html"}],["meta",{"property":"og:site_name","content":"Megestus"}],["meta",{"property":"og:title","content":"unity-shader-02"}],["meta",{"property":"og:description","content":"摘要：2HighLight、Hatching、Halftone"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127014454.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-15T09:07:27.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127014454.png"}],["meta",{"name":"twitter:image:alt","content":"unity-shader-02"}],["meta",{"property":"article:author","content":"Megestus"}],["meta",{"property":"article:tag","content":"shader"}],["meta",{"property":"article:tag","content":"unity"}],["meta",{"property":"article:published_time","content":"2024-01-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-15T09:07:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"unity-shader-02\\",\\"image\\":[\\"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240127014454.png\\"],\\"datePublished\\":\\"2024-01-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-15T09:07:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Megestus\\",\\"url\\":\\"https://github.com/Megestus\\"}]}"]]},"headers":[{"level":2,"title":"规范","slug":"规范","link":"#规范","children":[]},{"level":2,"title":"Shader","slug":"shader","link":"#shader","children":[{"level":3,"title":"偏移用加减-缩放用乘除","slug":"偏移用加减-缩放用乘除","link":"#偏移用加减-缩放用乘除","children":[]},{"level":3,"title":"2HighLight","slug":"_2highlight","link":"#_2highlight","children":[]},{"level":3,"title":"Hatching","slug":"hatching","link":"#hatching","children":[]},{"level":3,"title":"Halftone","slug":"halftone","link":"#halftone","children":[]}]}],"git":{"createdTime":1711204216000,"updatedTime":1718442447000,"contributors":[{"name":"Megestus","email":"2624203622@qq.com","commits":2}]},"filePathRelative":"engine/unity/shader/shader2.md","localizedDate":"2024年1月23日","excerpt":"<p>摘要：2HighLight、Hatching、Halftone</p>\\n","autoDesc":true}');export{q as comp,_ as data};
