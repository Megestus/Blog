import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as a,d as o,f as r,o as i}from"./app-CGK91Uhd.js";const n={},s=o("p",null,"程序化内容生成框架（PCG） 是一个用于在虚幻引擎中创建你自己的程序化内容及工具的工具集。借助PCG，技术美术师、设计师和程序员能够构建任意复杂度的快速迭代式工具和内容，从资产工具（如建筑物或群系生成等）到整个世界，不一而足。",-1),c=r('<p>一下学习基于UE5.4</p><h2 id="重要概念和术语" tabindex="-1"><a class="header-anchor" href="#重要概念和术语"><span>重要概念和术语</span></a></h2><p>点(Points)：3D空间中的坐标点，由PCG图表生成，常用于生成网格体。点包含变换、边界、颜色、密度、陡度和种子等信息。可以为它们分配由用户自定义的属性值。</p><p>点密度 (Point Density): 各种图形节点使用的值。这在调试视图中表示为每个点上的梯度，并表示该点在该位置存在的概率。密度为0表示黑色，密度为1表示白色。</p><h2 id="设置" tabindex="-1"><a class="header-anchor" href="#设置"><span>设置</span></a></h2><p>在项目-插件中启用 程序化内容生成框架（Procedural Content Generation Framework） 插件</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/202407140113137.png" style="width:100% !important;"></div><blockquote><p>需要 <strong>程序化内容生成框架几何体脚本交互（Procedural Content Generation Framework Geometry Script Interop）</strong> 插件，才能在静态网格体上对点取样。</p></blockquote><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2><p>使用 World Craetor 创建一个简单的地形</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/202407132155236.png" style="width:100% !important;"></div><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/202407132200695.png" style="width:100% !important;"></div><p> </p><p>右键创建PCG图表 ，拖进场景中是个类似容器的东西，然后我们就可以在图表蓝图中进行采样了</p><div class="image-preview"><img src="https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/202407132222923.png" style="width:100% !important;"></div>',15);function p(l,m){return i(),t("div",null,[s,a(" more "),c])}const g=e(n,[["render",p],["__file","PCG_Basic.html.vue"]]),u=JSON.parse('{"path":"/engine/unreal/PCG/PCG_Basic.html","title":"Unreal PCG Basic","lang":"zh-CN","frontmatter":{"title":"Unreal PCG Basic","icon":"iconfont alicon-unreal","category":"unreal","tag":["unreal","PCG"],"date":"2024-07-13T00:00:00.000Z","cover":null,"description":"程序化内容生成框架（PCG） 是一个用于在虚幻引擎中创建你自己的程序化内容及工具的工具集。借助PCG，技术美术师、设计师和程序员能够构建任意复杂度的快速迭代式工具和内容，从资产工具（如建筑物或群系生成等）到整个世界，不一而足。","head":[["meta",{"property":"og:url","content":"https:///about.md/blog/engine/unreal/PCG/PCG_Basic.html"}],["meta",{"property":"og:site_name","content":"Megestus"}],["meta",{"property":"og:title","content":"Unreal PCG Basic"}],["meta",{"property":"og:description","content":"程序化内容生成框架（PCG） 是一个用于在虚幻引擎中创建你自己的程序化内容及工具的工具集。借助PCG，技术美术师、设计师和程序员能够构建任意复杂度的快速迭代式工具和内容，从资产工具（如建筑物或群系生成等）到整个世界，不一而足。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-28T16:19:58.000Z"}],["meta",{"property":"article:author","content":"Megestus"}],["meta",{"property":"article:tag","content":"unreal"}],["meta",{"property":"article:tag","content":"PCG"}],["meta",{"property":"article:published_time","content":"2024-07-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-28T16:19:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Unreal PCG Basic\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-28T16:19:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Megestus\\",\\"url\\":\\"https://github.com/Megestus\\"}]}"]]},"headers":[{"level":2,"title":"重要概念和术语","slug":"重要概念和术语","link":"#重要概念和术语","children":[]},{"level":2,"title":"设置","slug":"设置","link":"#设置","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1721320096000,"updatedTime":1722183598000,"contributors":[{"name":"Megestus","email":"2624203622@qq.com","commits":3}]},"filePathRelative":"engine/unreal/PCG/PCG_Basic.md","localizedDate":"2024年7月13日","excerpt":"<p>程序化内容生成框架（PCG） 是一个用于在虚幻引擎中创建你自己的程序化内容及工具的工具集。借助PCG，技术美术师、设计师和程序员能够构建任意复杂度的快速迭代式工具和内容，从资产工具（如建筑物或群系生成等）到整个世界，不一而足。</p>\\n","autoDesc":true}');export{g as comp,u as data};
