import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,d as s,f as t,o}from"./app-CGGQrIRF.js";const i={},l=s("p",null,"(๑•́ ₃ •̀๑)ｴｰ",-1),p=t(`<h2 id="_1-print-语句" tabindex="-1"><a class="header-anchor" href="#_1-print-语句"><span>1. Print 语句</span></a></h2><ul><li><strong>Python 2</strong>: <code>print</code> 是一个语句，不需要括号。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span> <span class="token string">&quot;Hello, World!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>print</code> 是一个函数，需要括号。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_2-unicode-支持" tabindex="-1"><a class="header-anchor" href="#_2-unicode-支持"><span>2. Unicode 支持</span></a></h2><ul><li><strong>Python 2</strong>: 文本字符串和 Unicode 字符串是不同的类型，Unicode 字符串需要前缀 <code>u</code>。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span>
u <span class="token operator">=</span> <span class="token string">u&quot;Hello, World!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: 所有字符串默认都是 Unicode。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_3-整数除法" tabindex="-1"><a class="header-anchor" href="#_3-整数除法"><span>3. 整数除法</span></a></h2><ul><li><strong>Python 2</strong>: <code>/</code> 操作符执行整数除法，如果两个操作数都是整数的话。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 结果是 2</span>
result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>/</code> 操作符执行浮点除法，即使两个操作数都是整数。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 结果是 2.0</span>
result <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_4-range-函数" tabindex="-1"><a class="header-anchor" href="#_4-range-函数"><span>4. Range 函数</span></a></h2><ul><li><strong>Python 2</strong>: <code>range()</code> 返回一个列表，<code>xrange()</code> 返回一个迭代器。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>r <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 返回 [0, 1, 2, 3, 4]</span>
x <span class="token operator">=</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 返回 xrange(5) 对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>range()</code> 返回一个迭代器，类似于 Python 2 中的 <code>xrange()</code>。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>r <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 返回 range(0, 5) 对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_5-异常处理" tabindex="-1"><a class="header-anchor" href="#_5-异常处理"><span>5. 异常处理</span></a></h2><ul><li><strong>Python 2</strong>: 可以使用逗号来分隔异常名称和值。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">raise</span> IOError<span class="token punctuation">,</span> <span class="token string">&quot;file error&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: 必须使用括号来创建异常对象。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">raise</span> IOError<span class="token punctuation">(</span><span class="token string">&quot;file error&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_6-输入函数" tabindex="-1"><a class="header-anchor" href="#_6-输入函数"><span>6. 输入函数</span></a></h2><ul><li><strong>Python 2</strong>: <code>raw_input()</code> 用于获取字符串输入，<code>input()</code> 会计算输入的表达式。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token builtin">raw_input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter your name: &quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>input()</code> 用于获取字符串输入，Python 2 的 <code>input()</code> 在 Python 3 中被移除。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter your name: &quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_7-字典的-iteritems-方法" tabindex="-1"><a class="header-anchor" href="#_7-字典的-iteritems-方法"><span>7.字典的 <code>.iteritems()</code> 方法</span></a></h2><ul><li><strong>Python 2</strong>: 使用 <code>.iteritems()</code> 来迭代字典。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> my_dict<span class="token punctuation">.</span>iteritems<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span> key<span class="token punctuation">,</span> value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>.iteritems()</code> 被移除，使用 <code>.items()</code> 替代。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> my_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_8-xrange-函数" tabindex="-1"><a class="header-anchor" href="#_8-xrange-函数"><span>8.<code>xrange()</code> 函数</span></a></h2><ul><li><strong>Python 2</strong>: 使用 <code>xrange()</code> 生成数字序列。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span> i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>xrange()</code> 被移除，使用 <code>range()</code> 替代。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_9-异常捕获语法" tabindex="-1"><a class="header-anchor" href="#_9-异常捕获语法"><span>9.异常捕获语法</span></a></h2><ul><li><strong>Python 2</strong>: 使用逗号分隔异常类型和变量。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># 代码块</span>
<span class="token keyword">except</span> Exception<span class="token punctuation">,</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span> e
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: 使用 <code>as</code> 关键字。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># 代码块</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_10-basestring-抽象类" tabindex="-1"><a class="header-anchor" href="#_10-basestring-抽象类"><span>10.<code>basestring</code> 抽象类</span></a></h2><ul><li><strong>Python 2</strong>: 使用 <code>basestring</code> 作为 <code>str</code> 和 <code>unicode</code> 的抽象类。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token builtin">basestring</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>basestring</code> 被移除，使用 <code>str</code> 替代。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_11-file-类型" tabindex="-1"><a class="header-anchor" href="#_11-file-类型"><span>11.<code>file</code> 类型</span></a></h2><ul><li><strong>Python 2</strong>: 使用 <code>file</code> 类型打开文件。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">(</span><span class="token string">&#39;myfile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>file</code> 类型被移除，使用 <code>open()</code> 函数替代。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;myfile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="_12-next-方法和-next-方法" tabindex="-1"><a class="header-anchor" href="#_12-next-方法和-next-方法"><span>12.<code>next()</code> 方法和 <code>__next__</code> 方法</span></a></h2><ul><li><strong>Python 2</strong>: 自定义迭代器使用 <code>next()</code> 方法。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyIterator</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">next</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 返回下一个值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: <code>next()</code> 方法被重命名为 <code>__next__()</code>。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyIterator</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__next__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 返回下一个值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_13-编码" tabindex="-1"><a class="header-anchor" href="#_13-编码"><span>13.编码</span></a></h2><ul><li><strong>Python 2</strong>: 显式处理字符串编码和解码。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>unicode_string <span class="token operator">=</span> <span class="token string">u&quot;你好&quot;</span>
encoded_string <span class="token operator">=</span> unicode_string<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Python 3</strong>: 字符串默认为 Unicode，编码和解码更加直观。<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>string <span class="token operator">=</span> <span class="token string">&quot;你好&quot;</span>
encoded_string <span class="token operator">=</span> string<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><blockquote><p>源:<br> (1)Maya API - TD Series -- How to connect PyCharm to Maya 2022 - Python 3 &amp; 2. <a href="https://www.bilibili.com/video/BV14L411c7Y8/?uid=425631344C34313163375938" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV14L411c7Y8/?uid=425631344C34313163375938</a>.<br> (2)【Maya】Esteban《Maya 2022 中的 Python 3 介绍》(中英双字). <a href="https://www.bilibili.com/video/BV1Kv411E76q/?uid=4256314B7634313145373671" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1Kv411E76q/?uid=4256314B7634313145373671</a>.<br> (3)Introduction to Python Programming for Maya Animators. <a href="https://en.git.ir/udemy-introduction-to-python-programming-for-maya-animators/" target="_blank" rel="noopener noreferrer">https://en.git.ir/udemy-introduction-to-python-programming-for-maya-animators/</a>.<br> (4)How to Automatically Convert Python 2 to Python 3 for Maya. <a href="https://lesterbanks.com/2021/03/how-to-automatically-convert-python-2-to-python-3-for-maya/" target="_blank" rel="noopener noreferrer">https://lesterbanks.com/2021/03/how-to-automatically-convert-python-2-to-python-3-for-maya/</a>.<br> (5)Maya2022andPython3-Tech-Artists.Org. <a href="https://discourse.techart.online/t/maya-2022-and-python3/13706" target="_blank" rel="noopener noreferrer">https://discourse.techart.online/t/maya-2022-and-python3/13706</a>.<br> (6)MigratingtoPython3-AutodeskKnowledgeNetwork. <a href="https://help.autodesk.com/cloudhelp/2022/ENU/Maya-WhatsNewPR/files/GUID-3F136830-279D-4E98-AA6C-A3A0577CBE2B.html" target="_blank" rel="noopener noreferrer">https://help.autodesk.com/cloudhelp/2022/ENU/Maya-WhatsNewPR/files/GUID-3F136830-279D-4E98-AA6C-A3A0577CBE2B.html</a>.<br> (7)Operating System, Python, and PyMEL Updates - Autodesk Knowledge Network. <a href="https://help.autodesk.com/cloudhelp/2023/ENU/Maya-WhatsNewPR/files/GUID-DF43840B-4DB1-43F8-BFD1-97D8D031B91D.html" target="_blank" rel="noopener noreferrer">https://help.autodesk.com/cloudhelp/2023/ENU/Maya-WhatsNewPR/files/GUID-DF43840B-4DB1-43F8-BFD1-97D8D031B91D.html</a>.<br> (8)undefined. <a href="https://youtu.be/rZOmLLdyvDQ" target="_blank" rel="noopener noreferrer">https://youtu.be/rZOmLLdyvDQ</a>.<br> (9)undefined. <a href="https://t.co/LR9kfjwUe4" target="_blank" rel="noopener noreferrer">https://t.co/LR9kfjwUe4</a>.<br> (10)undefined. <a href="https://t.co/HO2zyZMvDe" target="_blank" rel="noopener noreferrer">https://t.co/HO2zyZMvDe</a>.<br> (11)TXT to MD | CloudConvert. <a href="https://cloudconvert.com/txt-to-md" target="_blank" rel="noopener noreferrer">https://cloudconvert.com/txt-to-md</a>.<br> (12)Online TEXT to MARKDOWN Converter - Vertopal.<br><a href="https://www.vertopal.com/en/convert/text-to-markdown" target="_blank" rel="noopener noreferrer">https://www.vertopal.com/en/convert/text-to-markdown</a>.</p></blockquote>`,27);function r(c,d){return o(),e("div",null,[l,a(" more "),p])}const g=n(i,[["render",r],["__file","py2_3.html.vue"]]),m=JSON.parse('{"path":"/posts/maya/py2_3.html","title":"Python 2 和 Python 3 的区别","lang":"zh-CN","frontmatter":{"title":"Python 2 和 Python 3 的区别","icon":"fa-brands fa-python","category":["Maya"],"tag":["Maya","python"],"date":"2024-06-09T00:00:00.000Z","cover":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240609234519.png","description":"(๑•́ ₃ •̀๑)ｴｰ","head":[["meta",{"property":"og:url","content":"https:///about.md/blog/posts/maya/py2_3.html"}],["meta",{"property":"og:site_name","content":"Megestus"}],["meta",{"property":"og:title","content":"Python 2 和 Python 3 的区别"}],["meta",{"property":"og:description","content":"(๑•́ ₃ •̀๑)ｴｰ"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240609234519.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-15T09:07:27.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240609234519.png"}],["meta",{"name":"twitter:image:alt","content":"Python 2 和 Python 3 的区别"}],["meta",{"property":"article:author","content":"Megestus"}],["meta",{"property":"article:tag","content":"Maya"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2024-06-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-15T09:07:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 2 和 Python 3 的区别\\",\\"image\\":[\\"https://megestus-1309556466.cos.ap-shanghai.myqcloud.com/img/20240609234519.png\\"],\\"datePublished\\":\\"2024-06-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-15T09:07:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Megestus\\",\\"url\\":\\"https://github.com/Megestus\\"}]}"]]},"headers":[{"level":2,"title":"1. Print 语句","slug":"_1-print-语句","link":"#_1-print-语句","children":[]},{"level":2,"title":"2. Unicode 支持","slug":"_2-unicode-支持","link":"#_2-unicode-支持","children":[]},{"level":2,"title":"3. 整数除法","slug":"_3-整数除法","link":"#_3-整数除法","children":[]},{"level":2,"title":"4. Range 函数","slug":"_4-range-函数","link":"#_4-range-函数","children":[]},{"level":2,"title":"5. 异常处理","slug":"_5-异常处理","link":"#_5-异常处理","children":[]},{"level":2,"title":"6. 输入函数","slug":"_6-输入函数","link":"#_6-输入函数","children":[]},{"level":2,"title":"7.字典的 .iteritems() 方法","slug":"_7-字典的-iteritems-方法","link":"#_7-字典的-iteritems-方法","children":[]},{"level":2,"title":"8.xrange() 函数","slug":"_8-xrange-函数","link":"#_8-xrange-函数","children":[]},{"level":2,"title":"9.异常捕获语法","slug":"_9-异常捕获语法","link":"#_9-异常捕获语法","children":[]},{"level":2,"title":"10.basestring 抽象类","slug":"_10-basestring-抽象类","link":"#_10-basestring-抽象类","children":[]},{"level":2,"title":"11.file 类型","slug":"_11-file-类型","link":"#_11-file-类型","children":[]},{"level":2,"title":"12.next() 方法和 __next__ 方法","slug":"_12-next-方法和-next-方法","link":"#_12-next-方法和-next-方法","children":[]},{"level":2,"title":"13.编码","slug":"_13-编码","link":"#_13-编码","children":[]}],"git":{"createdTime":1717952072000,"updatedTime":1718442447000,"contributors":[{"name":"Megestus","email":"2624203622@qq.com","commits":2}]},"filePathRelative":"posts/maya/py2&3.md","localizedDate":"2024年6月9日","excerpt":"<p>(๑•́ ₃ •̀๑)ｴｰ</p>\\n","autoDesc":true}');export{g as comp,m as data};
