import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as l,e as a,d as s,f as e,o as t}from"./app-BfHAAWql.js";const d={},r=s("p",null,"Linux常用操作命令记录",-1),u=e(`<p>常用操作命令</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>#清屏
clear

#编辑模式
i
#保存并退出
：wq   

#保存并退出
ctrl+x 

y

enter

# 新文件夹
mkdir 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linux文件权限" tabindex="-1"><a class="header-anchor" href="#linux文件权限"><span>Linux文件权限</span></a></h2><p>所有者-所有组-其他用户</p><p>-权限顺序为：readable、writable、excutable。</p><table><thead><tr><th>权限</th><th>对文件执行的操作</th><th>对目录执行的操作</th></tr></thead><tbody><tr><td>r</td><td>读取文件的内容</td><td>列出目录内容（文件名）</td></tr><tr><td>w</td><td>可以更改文件内容</td><td>可以创建和删除目录中的文件</td></tr><tr><td>x</td><td>可作为命令执行文件</td><td>可以访问目录的内容</td></tr></tbody></table><p><a href="https://www.runoob.com/linux/linux-user-manage.html" target="_blank" rel="noopener noreferrer">Linux 用户和用户组管理 | 菜鸟教程</a></p><p>将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>chmod ugo+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>chmod a+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>chmod ug+w,o-w file1.txt file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为 <a href="http://ex1.py" target="_blank" rel="noopener noreferrer">ex1.py</a> 文件拥有者增加可执行权限:</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>chmod u+x ex1.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将目前目录下的所有文件与子目录皆设为任何人可读取 :</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>chmod -R a+r *
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mkdir-选项-新文件夹" tabindex="-1"><a class="header-anchor" href="#mkdir-选项-新文件夹"><span>mkdir [选项] 新文件夹</span></a></h2><p>mkdir 命令可以创建一个文件夹</p><p>m: 对新建目录设置存取权限，也可以用 chmod 命令设置; -p: 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mkdir    #[选项] 新文件夹

mkdir tools          //在当前目录下创建一个名为tools的目录
mkdir /bin/tools     //在指定目录下创建一个名为tools的目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119003108.png" style="width:50% !important;"></div><blockquote><p>ps：当 opencloudos 后面跟着的是当前目录名， <code>~</code> 表示当前在根目录</p></blockquote><ul><li><strong>使用 mkdir 创建文件夹</strong></li></ul><p>直接使用 mkdir 命令只能创建父目录存在的文件夹，</p><p>例如 test 文件夹存在，可以直接创建 test/data 文件夹：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mkdir test/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>使用 mkdir 创建文件夹</strong></li></ul><p>但是当前目录下不存在 test2 目录，创建 test2/data 文件夹会失败：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mkdir test2/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这时候就可以使用 -p 参数，将路径中不存在的目录自动创建</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mkdir -p test2/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119003655.png" style="width:60% !important;"></div><p>分别查看当前目录和 test2 目录：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls
ls test2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cd-目录名" tabindex="-1"><a class="header-anchor" href="#cd-目录名"><span>cd [目录名]</span></a></h2><p>命令语法：cd [目录名] cd(changeDirectory)可以切换当前目录</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>#进入 /home 目录
cd /home

#返回上次所在的目录，也就是根目录
cd -

#进入 test 目录
cd test

#返回上一级目录，也就是根目录
cd ..
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119003808.png" style="width:70% !important;"></div>`,39),c=e(`<div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cd /                 //切换到根目录
cd /bin              //切换到根目录下的bin目录
cd ../               //切换到上一级目录 或者使用命令：cd ..
cd ~                 //切换到home目录
cd -                 //切换到上次访问的目录
cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错
cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="touch-新文件名" tabindex="-1"><a class="header-anchor" href="#touch-新文件名"><span>touch [新文件名]</span></a></h2><p>命令语法：touch [新文件名]</p><p>使用 touch 命令可以创建文件</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>#新建的 test 目录当前没有文件，我们在 test 目录下新建两个文件 a.txt 和 b.txt，可以列出多个文件名一次创建

#首先进入 test 目录：
cd test

#新建两个文件 a.txt 和 b.txt：
touch a.txt b.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004127.png" style="width:70% !important;"></div><blockquote><p>一般创建成功或者执行成功就是不会爆出什么错误</p></blockquote><h3 id="编辑文件-vi、vim" tabindex="-1"><a class="header-anchor" href="#编辑文件-vi、vim"><span>编辑文件（vi、vim）</span></a></h3><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>  vi 文件名              //打开需要编辑的文件
  --进入后，操作界面有三种模式：命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode）
  命令模式
  -刚进入文件就是命令模式，通过方向键控制光标位置，
  -使用命令&quot;dd&quot;删除当前整行
  -使用命令&quot;/字段&quot;进行查找
  -按&quot;i&quot;在光标所在字符前开始插入
  -按&quot;a&quot;在光标所在字符后开始插入
  -按&quot;o&quot;在光标所在行的下面另起一新行插入
  -按&quot;：&quot;进入底行模式
  插入模式
  -此时可以对文件内容进行编辑，左下角会显示 &quot;-- 插入 --&quot;&quot;
  -按&quot;ESC&quot;进入底行模式
  底行模式
  -退出编辑：      :q
  -强制退出：      :q!
  -保存并退出：    :wq
  
  ## 操作步骤示例 ##
  
  1.保存文件：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;wq&quot;,回车     //保存并退出编辑
  2.取消操作：按&quot;ESC&quot; -&gt; 输入&quot;:&quot; -&gt; 输入&quot;q!&quot;,回车     //撤销本次修改并退出编辑
  
  ## 补充 ##
  vim +10 filename.txt                   //打开文件并跳到第10行
  vim -R /etc/passwd                     //以只读模式打开文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看文件" tabindex="-1"><a class="header-anchor" href="#查看文件"><span>查看文件</span></a></h3><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>  cat a.txt          //查看文件最后一屏内容
  less a.txt         //PgUp向上翻页，PgDn向下翻页，&quot;q&quot;退出查看
  more a.txt         //显示百分比，回车查看下一行，空格查看下一页，&quot;q&quot;退出查看
  tail -100 a.txt    //查看文件的后100行，&quot;Ctrl+C&quot;退出查看
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ls-选项-目录" tabindex="-1"><a class="header-anchor" href="#ls-选项-目录"><span>ls [选项] [目录]</span></a></h2><p>命令语法：ls [选项] [目录] ls 就是 list 的缩写，可以查看 linux 某个目录包含的文件信息，例如文件权限，文件大小，文件修改时间息等等，默认目录为当前目录</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls -a 列出目录所有文件，包含以.开始的隐藏文件
ls -t 以文件修改时间排序
ls -S 以文件大小排序
ls -h 以易读大小显示
ls -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-ls-显示文件信息-1" tabindex="-1"><a class="header-anchor" href="#使用-ls-显示文件信息-1"><span><strong><strong>使用 ls 显示文件信息(1)</strong></strong></span></a></h3><p>ls 目录默认为当前目录<code>./</code>，也可以指定为任意文件夹</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls -l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个选项会显示长列表格式的文件内容：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004318.png" style="width:70% !important;"></div><p>从上面可以看到，每一行都有7列，分别是：</p><ul><li>第一列共10位，第1位表示文档类型，d表示目录，-表示文件，l表示链接文件，d表示可随机存取的设备，如U盘等，c表示一次性读取设备，如鼠标、键盘等。后9位依次对应所有者、用户组和其他人对这个文件/目录的权限，权限顺序为：readable、writable、excutable。</li></ul><blockquote><p>如：-r-xr-x---的含义为当前文档是一个文件，拥有者可读、可执行，同一个群组下的用户，可读、可执行，其他人没有任何权限。</p></blockquote><ul><li>第二列表示链接数，表示有多少个文件链接到inode号码。</li><li>第三列表示拥有者</li><li>第四列表示所属群组</li><li>第五列表示文档容量大小，单位为字节</li><li>第六列表示文档最后修改时间</li><li>第七列表示文档名称。以<code>.</code>开头的是隐藏文档</li></ul><h3 id="使用-ls-显示文件信息-2" tabindex="-1"><a class="header-anchor" href="#使用-ls-显示文件信息-2"><span><strong><strong>使用 ls 显示文件信息（2）</strong></strong></span></a></h3><p>h 参数可以以易读大小显示</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls -lh /root/oc-lab/rpms/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到，文件大小会以 K、M、G 等单位显示，相比字节可读性更高</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004421.png" style="width:90% !important;"></div><h3 id="使用-ls-显示文件信息-3" tabindex="-1"><a class="header-anchor" href="#使用-ls-显示文件信息-3"><span><strong><strong>使用 ls 显示文件信息（3）</strong></strong></span></a></h3><p>在 Linux 文件系统中，有一部分文件属于隐藏文件，隐藏文件的特点是文件名开头带<code>.</code> 用 ls 命令或者 ls -l 是无法显示隐藏文件的，必须加上 -a 选项：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls -a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004705.png" style="width:70% !important;"></div><p>请在 test 目录下使用 touch 创建一个隐藏文件 <code>.ignore</code> 并使用 ls -a 查看</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004753.png" style="width:70% !important;"></div><h2 id="cp-选项-源目录-目的目录" tabindex="-1"><a class="header-anchor" href="#cp-选项-源目录-目的目录"><span>cp [选项] [源目录] [目的目录]</span></a></h2><p>使用 cp 命令可以将指定的文件拷贝到指定的目录</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。
-d：复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。
-f：覆盖已经存在的目标文件而不给出提示。
-i：与 -f 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 y 时目标文件将被覆盖。
-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。
-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。
-l：不复制文件，只是生成链接文件。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这个拷贝文件需要把拷贝出来的文件名字给放到后头，自定义</p></blockquote><h3 id="使用-cp-拷贝文件-1" tabindex="-1"><a class="header-anchor" href="#使用-cp-拷贝文件-1"><span><strong><strong>使用 cp 拷贝文件（1）</strong></strong></span></a></h3><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cp a.txt a_cp.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004832.png" style="width:70% !important;"></div><h3 id="使用-cp-拷贝文件-2" tabindex="-1"><a class="header-anchor" href="#使用-cp-拷贝文件-2"><span><strong>使用 cp 拷贝文件（2）</strong></span></a></h3><p>如果需要保持时间一致，可以使用 -p 选项，例如：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cp -p a.txt a_cp2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这时候拷贝的文件和原文件的时间是一致的：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004904.png" style="width:70% !important;"></div><h3 id="使用-cp-拷贝文件-3" tabindex="-1"><a class="header-anchor" href="#使用-cp-拷贝文件-3"><span><strong>使用 cp 拷贝文件（3）</strong></span></a></h3><p>cp 命令可以同时拷贝多个文件，例如将 a.txt b.txt 拷贝到 test2 目录下：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cp a.txt b.txt ../test2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 ls 命令查看这个目录：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls -l ../test2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到，多个文件同时被拷贝进了目录：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004933.png" style="width:70% !important;"></div><blockquote><p>注意了 ../test2 这里.. 代表了返回上一级文件夹</p></blockquote><h3 id="使用-cp-拷贝文件-4" tabindex="-1"><a class="header-anchor" href="#使用-cp-拷贝文件-4"><span><strong>使用 cp 拷贝文件（4）</strong></span></a></h3><p>cp 命令无法直接拷贝目录，我们返回根目录进行试验，例如：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cd /root
cp test test-cp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候命令行会提示拷贝目录失败：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119004954.png" style="width:70% !important;"></div><p>如果需要拷贝目录，可以加上 -r 选项：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cp -r test test-cp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用 ls 命令查看：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到目录被拷贝过来了：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005040.png" style="width:70% !important;"></div><h2 id="mv移动文件-重命名" tabindex="-1"><a class="header-anchor" href="#mv移动文件-重命名"><span><strong>mv</strong>移动文件-重命名</span></a></h2><p>命令语法： mv [options] source dest mv [options] source... directory</p><p>mv（move file）命令顾名思义可以移动文件，也可以用来修改文件名（相当于移动文件到同一目录下）</p><h3 id="使用-mv-修改文件名-重命名" tabindex="-1"><a class="header-anchor" href="#使用-mv-修改文件名-重命名"><span><strong>使用 mv 修改文件名（重命名）</strong></span></a></h3><p>首先 cd 进入 test 文件夹。当前 test 目录中有以下文件：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005109.png" style="width:70% !important;"></div><p>我们可以用 mv 对 文件进行进行重命名。例如：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mv b.txt b2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这行命令会将当前目录的 b.txt 重命名为 b2.txt：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005133.png" style="width:70% !important;"></div><h3 id="使用-mv-移动文件" tabindex="-1"><a class="header-anchor" href="#使用-mv-移动文件"><span><strong>使用 mv 移动文件</strong></span></a></h3><p>mv 命令的另一个用法是移动文件。例如，将当前目录中的 b2.txt 移动到 root 目录：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>mv b2.txt /root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看当前目录：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到，当前目录已经没有 b2.txt 文件了：</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005212.png" style="width:70% !important;"></div><p>再看看 root，b2.txt 文件现在在 root 根目录中：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>ls /root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005232.png" style="width:70% !important;"></div><h2 id="rm移除" tabindex="-1"><a class="header-anchor" href="#rm移除"><span><strong>rm移除</strong></span></a></h2><p><strong>命令介绍</strong></p><p>命令语法：rm [选项] 文件…</p><p>删除一个目录中的一个或多个文件或目录，本次实验环境默认开启 -i 选项，所有删除均需输入 y/n 确认</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>-i 删除前逐一询问确认。
-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。
-r 将目录及以下之档案亦逐一删除。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-mv-删除文件" tabindex="-1"><a class="header-anchor" href="#使用-mv-删除文件"><span><strong>使用 mv 删除文件</strong></span></a></h3><p>删除 test 目录下的 a_cp.txt a_cp2.txt 文件</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>rm a_cp.txt a_cp2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005304.png" style="width:70% !important;"></div><h3 id="使用-mv-删除文件夹" tabindex="-1"><a class="header-anchor" href="#使用-mv-删除文件夹"><span><strong>使用 mv 删除文件夹</strong></span></a></h3><p>删除 data 目录及子目录：</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cd /root &amp;&amp; rm -r test2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005330.png" style="width:70% !important;"></div><blockquote><p>这个移除的目录是test2 目录还有子目录</p></blockquote><h2 id="cat-查看文件名" tabindex="-1"><a class="header-anchor" href="#cat-查看文件名"><span><strong>cat-</strong> 查看文件名</span></a></h2><p><strong>命令介绍</strong></p><p>命令语法：cat [选项] 文件名</p><p>Linux 系统中有很多查看文件的命令。最简单的是 cat 命令</p><h3 id="使用-cat-查看文件内容" tabindex="-1"><a class="header-anchor" href="#使用-cat-查看文件内容"><span><strong>使用 cat 查看文件内容</strong></span></a></h3><p>这个命令会直接在命令行打印文件的全部内容，如果文件的内容太多，查看起来不方便，可以以滚屏的方式查看。</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cat /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005352.png" style="width:70% !important;"></div><p>还可以从键盘创建一个新文件:</p><div class="language-linux line-numbers-mode" data-ext="linux" data-title="linux"><pre class="language-linux"><code>cat &gt; filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>键盘上按下快捷键 Ctrl+D ，就可以成功创建并保存内容了</p><div class="image-preview"><img src="https://sky.megestu.top/i/12024/20240119005423.png" style="width:70% !important;"></div><h2 id="tar-压缩" tabindex="-1"><a class="header-anchor" href="#tar-压缩"><span><strong>tar-压缩</strong></span></a></h2><p><strong>命令介绍</strong></p><p>tar [参数] 文件或目录...</p><p>用来压缩和解压文件。tar 本身不具有压缩功能，只具有打包功能，有关压缩及解压是调用其它的功能来完成。</p><p>弄清两个概念：打包和压缩。 打包：将一大堆文件或目录变成一个总的文件； 压缩：将一个大的文件通过一些压缩算法变成一个小文件</p><ul><li>c 建立新的压缩文件</li><li>f 指定压缩文件</li><li>x 从压缩包中抽取文件</li><li>t 显示压缩文件中的内容</li><li>z 支持gzip压缩</li><li>j 支持bzip2压缩</li><li>Z 支持compress解压文件</li><li>v 显示操作过程</li><li>C&lt;目的目录&gt;或--directory=&lt;目的目录&gt; 切换到指定的目录。</li></ul><p>“/”表示根目录</p><p>在Linux系统中定位文件或目录位置时，使用撇号“/”进行分隔(区别于windows中的反撇号“\\”)。</p><p>“/”表示根目录，它是linux文件系统的起点，其所在的分区称为根分区。</p><p>在根目录下，linux系统将默认建立一些特殊的子目录，分别用于不同的用途。下面简单介绍一下其中常见的子目录及其作用：</p><p>/boot：存放启动系统所必需的文件，包括内核文件、启动菜单配置文件等。出于系统安全考虑，“/boot”目录通常被划分为独立的分区，称为“/boot”分区。</p><p>/bin: 存放系统中最基本的用户命令，普通用户都有执行权限。</p><p>/dev：存放系统中的硬盘、键盘、鼠标、光驱等各种设备文件。</p><p>/etc：存放系统及各种程序的配置文件，配置文件较多的程序会在“etc”目录下建立独立的子目录，用于存放各自的配置文件。</p><p>/home：存放所有普通用户系统用户的默认工作目录(又称为宿主目录)，例如用户帐号“zhangsan”对应的宿主目录位于“/home/zhangsan”。如果服务器需要提供给大量的普通用户使用，建议将/home目录划分独立分区，以方便用户数据的备份。</p><p>/root: 为Linux系统超级用户root的宿主目录，默认情况下只有root的宿主目录在根目录下，而不是在/home下。</p><p>/sbin：存放最基本的管理命令，一般管理员用户才有执行权限。</p><p>/usr：存放其他的用户应用程序，通常还被划分为很多子目录，用于存放不通类型的应用程序。</p><p>/var: 存放系统中经常需要变化的一些文件，如系统日志、用户邮箱目录等。</p><p>/tmp：存放系统运行过程中使用的一些临时文件。</p>`,131);function v(p,o){return t(),n("div",null,[r,l(" more "),u,a(" > ps：当 opencloudos 后面跟着的是当前目录名， `~` 表示当前在根目录 "),c])}const x=i(d,[["render",v],["__file","linux.html.vue"]]),h=JSON.parse('{"path":"/server/docker/linux.html","title":"Linux命令操作","lang":"zh-CN","frontmatter":{"title":"Linux命令操作","description":"Linux常用操作命令记录","icon":"fa-brands fa-linux","category":"Linux","tag":["Linux","docker"],"date":"2024-01-18T00:00:00.000Z","cover":"https://sky.megestu.top/i/12024/linux2.webp","head":[["meta",{"property":"og:url","content":"https:///about.md/blog/server/docker/linux.html"}],["meta",{"property":"og:site_name","content":"Megestus"}],["meta",{"property":"og:title","content":"Linux命令操作"}],["meta",{"property":"og:description","content":"Linux常用操作命令记录"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://sky.megestu.top/i/12024/linux2.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-23T14:30:16.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://sky.megestu.top/i/12024/linux2.webp"}],["meta",{"name":"twitter:image:alt","content":"Linux命令操作"}],["meta",{"property":"article:author","content":"Megestus"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-01-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-23T14:30:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux命令操作\\",\\"image\\":[\\"https://sky.megestu.top/i/12024/linux2.webp\\"],\\"datePublished\\":\\"2024-01-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-23T14:30:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Megestus\\",\\"url\\":\\"https://github.com/Megestus\\"}]}"]]},"headers":[{"level":2,"title":"Linux文件权限","slug":"linux文件权限","link":"#linux文件权限","children":[]},{"level":2,"title":"mkdir [选项] 新文件夹","slug":"mkdir-选项-新文件夹","link":"#mkdir-选项-新文件夹","children":[]},{"level":2,"title":"cd [目录名]","slug":"cd-目录名","link":"#cd-目录名","children":[]},{"level":2,"title":"touch [新文件名]","slug":"touch-新文件名","link":"#touch-新文件名","children":[{"level":3,"title":"编辑文件（vi、vim）","slug":"编辑文件-vi、vim","link":"#编辑文件-vi、vim","children":[]},{"level":3,"title":"查看文件","slug":"查看文件","link":"#查看文件","children":[]}]},{"level":2,"title":"ls [选项] [目录]","slug":"ls-选项-目录","link":"#ls-选项-目录","children":[{"level":3,"title":"使用 ls 显示文件信息(1)","slug":"使用-ls-显示文件信息-1","link":"#使用-ls-显示文件信息-1","children":[]},{"level":3,"title":"使用 ls 显示文件信息（2）","slug":"使用-ls-显示文件信息-2","link":"#使用-ls-显示文件信息-2","children":[]},{"level":3,"title":"使用 ls 显示文件信息（3）","slug":"使用-ls-显示文件信息-3","link":"#使用-ls-显示文件信息-3","children":[]}]},{"level":2,"title":"cp [选项] [源目录] [目的目录]","slug":"cp-选项-源目录-目的目录","link":"#cp-选项-源目录-目的目录","children":[{"level":3,"title":"使用 cp 拷贝文件（1）","slug":"使用-cp-拷贝文件-1","link":"#使用-cp-拷贝文件-1","children":[]},{"level":3,"title":"使用 cp 拷贝文件（2）","slug":"使用-cp-拷贝文件-2","link":"#使用-cp-拷贝文件-2","children":[]},{"level":3,"title":"使用 cp 拷贝文件（3）","slug":"使用-cp-拷贝文件-3","link":"#使用-cp-拷贝文件-3","children":[]},{"level":3,"title":"使用 cp 拷贝文件（4）","slug":"使用-cp-拷贝文件-4","link":"#使用-cp-拷贝文件-4","children":[]}]},{"level":2,"title":"mv移动文件-重命名","slug":"mv移动文件-重命名","link":"#mv移动文件-重命名","children":[{"level":3,"title":"使用 mv 修改文件名（重命名）","slug":"使用-mv-修改文件名-重命名","link":"#使用-mv-修改文件名-重命名","children":[]},{"level":3,"title":"使用 mv 移动文件","slug":"使用-mv-移动文件","link":"#使用-mv-移动文件","children":[]}]},{"level":2,"title":"rm移除","slug":"rm移除","link":"#rm移除","children":[{"level":3,"title":"使用 mv 删除文件","slug":"使用-mv-删除文件","link":"#使用-mv-删除文件","children":[]},{"level":3,"title":"使用 mv 删除文件夹","slug":"使用-mv-删除文件夹","link":"#使用-mv-删除文件夹","children":[]}]},{"level":2,"title":"cat- 查看文件名","slug":"cat-查看文件名","link":"#cat-查看文件名","children":[{"level":3,"title":"使用 cat 查看文件内容","slug":"使用-cat-查看文件内容","link":"#使用-cat-查看文件内容","children":[]}]},{"level":2,"title":"tar-压缩","slug":"tar-压缩","link":"#tar-压缩","children":[]}],"git":{"createdTime":1711204216000,"updatedTime":1711204216000,"contributors":[{"name":"Megestus","email":"2624203622@qq.com","commits":1}]},"filePathRelative":"server/docker/linux.md","localizedDate":"2024年1月18日","excerpt":"<p>Linux常用操作命令记录</p>\\n","autoDesc":true}');export{x as comp,h as data};
